// Media Query Breakpoints
$breakpoints: (
  'xs': 0,
  'sm': 576px,
  'md': 768px,
  'lg': 992px,
  'xl': 1200px,
  'xxl': 1400px,
) !default;

// Media Query Mixin
@use 'sass:map';

@mixin respond-to($breakpoint) {
  @if map.has-key($breakpoints, $breakpoint) {
    @media (min-width: map.get($breakpoints, $breakpoint)) {
      @content;
    }
  } @else {
    @warn "Unknown breakpoint #{$breakpoint}.";
  }
}

// Button Variant Mixin
@mixin button-variant($background, $color, $hover-background) {
  color: $color;
  background-color: $background;
  border-color: $background;

  &:hover {
    color: $color;
    background-color: $hover-background;
    border-color: $hover-background;
  }

  &:focus,
  &.focus {
    color: $color;
    background-color: $hover-background;
    border-color: $hover-background;
    box-shadow: 0 0 0 0.2rem rgba($background, 0.5);
  }

  &:disabled,
  &.disabled {
    background-color: $background;
    border-color: $background;
  }
}

// Flexbox Mixins
@mixin flex-center {
  display: flex;
  justify-content: center;
  align-items: center;
}

@mixin flex-between {
  display: flex;
  justify-content: space-between;
  align-items: center;
}

@mixin flex-column {
  display: flex;
  flex-direction: column;
}

// Position Mixins
@mixin absolute-center {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
}

@mixin fixed-full {
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
}

// Text Mixins
@mixin text-truncate {
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}

@mixin multi-line-ellipsis($lines: 2) {
  display: -webkit-box;
  -webkit-line-clamp: $lines;
  -webkit-box-orient: vertical;
  overflow: hidden;
  text-overflow: ellipsis;
}

// Animation Mixins
@mixin transition($properties: all, $duration: 0.3s, $timing: ease, $delay: 0s) {
  @if list.length($properties) > 1 {
    transition-property: $properties;
  } @else {
    transition: $properties $duration $timing $delay;
  }
}

@mixin keyframes($name) {
  @keyframes #{$name} {
    @content;
  }
}

// Button Mixin
@mixin button-variant(
  $background,
  $color: #fff,
  $hover-background: color.adjust($background, $lightness: -7.5%),
  $hover-color: $color
) {
  background-color: $background;
  color: $color;
  border: 1px solid $background;

  &:hover:not(:disabled) {
    background-color: $hover-background;
    color: $hover-color;
  }

  &:disabled {
    opacity: 0.65;
    cursor: not-allowed;
  }
}

// Grid Mixins
@mixin grid($cols: 12, $gap: 1rem) {
  display: grid;
  grid-template-columns: repeat($cols, 1fr);
  gap: $gap;
}

// Container Mixin
@mixin container($max-width: 1200px, $padding: 1rem) {
  width: 100%;
  max-width: $max-width;
  margin: 0 auto;
  padding: 0 $padding;

  @include respond-to('xl') {
    padding: 0;
  }
}

// Visually Hidden (for accessibility)
@mixin visually-hidden {
  position: absolute;
  width: 1px;
  height: 1px;
  padding: 0;
  margin: -1px;
  overflow: hidden;
  clip: rect(0, 0, 0, 0);
  white-space: nowrap;
  border: 0;
}

// Clearfix
@mixin clearfix {
  &::after {
    content: '';
    display: table;
    clear: both;
  }
}
